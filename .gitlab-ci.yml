---

.script-git-submodule: &script-git-submodule
  - |
    git submodule sync --recursive
    git submodule update --init --recursive

.script-linters: &script-linters
  - |
    flake8
    yamllint .
    ansible-lint

.script-bootstrap-python: &script-bootstrap-python
  - |
    if ! [[ -x "$(command -v pipx)" && -x "$(command -v flake8)" && -x "$(command -v yamllint)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_24.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_24.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y bzip2 ca-certificates curl flake8 gcc gnupg gzip iproute2 pipx procps python3 python3-apt python3-cryptography python3-flake8 python3-jmespath python3-lxml python3-netaddr python3-pip python3-setuptools python3-venv python3-virtualenv python3-wheel sudo tar unzip xz-utils yamllint zip
    fi
    sh -x -c "python3 --version"
    sh -x -c "pipx --version"
    sh -x -c "flake8 --version"
    sh -x -c "yamllint --version"

.script-bootstrap-ansible: &script-bootstrap-ansible
  - |
    if ! [[ -x "$(command -v ansible)" && -x "$(command -v ansible-lint)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_24.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_24.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y ansible ansible-lint python3-docker python3-netaddr python3-vagrant
    fi
    sh -x -c "ansible --version"
    sh -x -c "ansible-lint --version"

.script-bootstrap-molecule: &script-bootstrap-molecule
  - |
    if ! [[ -x "$(command -v molecule)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_24.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_24.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y python3-molecule python3-molecule-plugins
    fi
    sh -x -c "molecule --version"

.script-bootstrap-libvirt: &script-bootstrap-libvirt
  - |
    if ! [[ -x "$(command -v qemu-system-x86_64)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_24.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_24.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y binutils bridge-utils dnsmasq-base ebtables gcc libarchive-tools libguestfs-tools libvirt-clients libvirt-daemon-system libvirt-dev make qemu-system qemu-utils ruby-dev virt-manager
    fi
    sudo systemctl start libvirtd.service
    sh -x -c "sudo systemctl status --no-pager libvirtd.service"
    sh -x -c "qemu-system-x86_64 --version"
    sh -x -c "virsh --version"

.script-bootstrap-virtualbox: &script-bootstrap-virtualbox
  - |
    if ! [[ -x "$(command -v VBoxManage)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian jammy contrib" | sudo tee /etc/apt/sources.list.d/virtualbox.list
      curl -fsSL https://www.virtualbox.org/download/oracle_vbox_2016.asc | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/virtualbox.gpg > /dev/null
      sudo -E apt-get update
      curl -skL -O http://archive.ubuntu.com/ubuntu/pool/main/libv/libvpx/libvpx7_1.12.0-1ubuntu2_amd64.deb
      sudo dpkg -i libvpx7_1.12.0-1ubuntu2_amd64.deb
      sudo -E apt-get install -y virtualbox-7.0
      export VERSION="$(VBoxManage --version | sed 's/^\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/g')"
      curl -skL -O https://download.virtualbox.org/virtualbox/$VERSION/Oracle_VM_VirtualBox_Extension_Pack-$VERSION.vbox-extpack
      echo "y" | sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-$VERSION.vbox-extpack --replace
      rm -rf Oracle_VM_VirtualBox_Extension_Pack-$VERSION.vbox-extpack
    fi
    sudo systemctl start vboxdrv.service
    sh -x -c "sudo systemctl status --no-pager vboxdrv.service"
    sh -x -c "VBoxManage --version"

.script-bootstrap-vagrant: &script-bootstrap-vagrant
  - |
    if ! [[ -x "$(command -v hcp)" && -x "$(command -v vagrant)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_24.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_24.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y hcp vagrant
      vagrant plugin install vagrant-libvirt
    fi
    sh -x -c "hcp version"
    sh -x -c "vagrant --version"
    sh -x -c "vagrant plugin list"

.script-bootstrap-packer: &script-bootstrap-packer
  - |
    if ! [[ -x "$(command -v packer)" ]]; then
      export DEBIAN_FRONTEND="noninteractive"
      echo "deb http://downloadcontent.opensuse.org/repositories/home:/alvistack/xUbuntu_24.04/ /" | sudo tee /etc/apt/sources.list.d/home:alvistack.list
      curl -fsSL https://downloadcontent.opensuse.org/repositories/home:alvistack/xUbuntu_24.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/home_alvistack.gpg > /dev/null
      sudo -E apt-get update
      sudo -E apt-get install -y packer packer-plugin-libvirt
    fi
    sh -x -c "packer --version"

.script-packer-build: &script-packer-build
  - |
    cd $CI_PROJECT_DIR/packer/$_BOX-$_PROVIDER
    sudo -E packer build packer.json

.script-vagrant-box-add: &script-vagrant-box-add
  - |
    export _ORG="$CI_PROJECT_NAMESPACE"
    sudo -E umount /home/vagrant/.vagrant.d/boxes
    sudo -E vagrant box add \
      --name $_ORG/$_BOX \
      --provider $_PROVIDER \
      $CI_PROJECT_DIR/packer/$_BOX-$_PROVIDER/output-vagrant/package.box

.script-molecule-test: &script-molecule-test
  - |
    export _MOLECULE_INSTANCE_NAME="$(pwgen -1AB 12)"
    sudo -E molecule test -s $_BOX-$_PROVIDER

.script-vagrant-cloud-provider-upload: &script-vagrant-cloud-provider-upload
  - |
    if [[ -n "$CI_COMMIT_TAG" ]] && [[ "$CI_COMMIT_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then
      export _VERSION="$CI_COMMIT_TAG"
    elif [[ -n "$CI_COMMIT_BRANCH" ]] && [[ "$CI_COMMIT_BRANCH" =~ master ]]; then
      export _VERSION="$(date +%Y%m%d).0.0"
    else
      exit 0
    fi
    sudo -E hcp auth login --client-id=$HCP_CLIENT_ID --client-secret=$HCP_CLIENT_SECRET
    export _VAGRANT_CLOUD_TOKEN=";$(sudo -E hcp auth print-access-token)"
    cd $CI_PROJECT_DIR/packer/$_BOX-$_PROVIDER
    export _ORG="$CI_PROJECT_NAMESPACE"
    export _CHECKSUM="$(sha256sum output-vagrant/package.box | awk '{ print $1 }')"
    curl -skL \
      --request POST \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $_VAGRANT_CLOUD_TOKEN" \
      --data "{ \"box\": { \"username\": \"$_ORG\", \"name\": \"$_BOX\", \"is_private\": false } }" \
      https://app.vagrantup.com/api/v2/boxes | jq .
    curl -skL \
      --request POST \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $_VAGRANT_CLOUD_TOKEN" \
      --data "{ \"version\": { \"version\": \"$_VERSION\" } }" \
      https://app.vagrantup.com/api/v2/box/$_ORG/$_BOX/versions | jq .
    curl -skL \
      --request DELETE \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $_VAGRANT_CLOUD_TOKEN" \
      https://app.vagrantup.com/api/v2/box/$_ORG/$_BOX/version/$_VERSION/provider/$_PROVIDER/$_ARCHITECTURE | jq .
    curl -skL \
      --request POST \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $_VAGRANT_CLOUD_TOKEN" \
      --data "{ \"provider\": { \"name\": \"$_PROVIDER\", \"checksum_type\": \"sha256\", \"checksum\": \"$_CHECKSUM\", \"architecture\": \"$_ARCHITECTURE\", \"default_architecture\": true } }" \
      https://app.vagrantup.com/api/v2/box/$_ORG/$_BOX/version/$_VERSION/providers | jq .
    _UPLOAD_PATH=$(curl -skL \
      --request GET \
      --header "Authorization: Bearer $_VAGRANT_CLOUD_TOKEN" \
      https://app.vagrantup.com/api/v2/box/$_ORG/$_BOX/version/$_VERSION/provider/$_PROVIDER/$_ARCHITECTURE/upload | jq -r .upload_path)
    curl -skL \
      --request PUT \
      --header "Connection: keep-alive" \
      --upload-file output-vagrant/package.box \
      $_UPLOAD_PATH | jq .
    curl -skL \
      --request PUT \
      --header "Authorization: Bearer $_VAGRANT_CLOUD_TOKEN" \
      https://app.vagrantup.com/api/v2/box/$_ORG/$_BOX/version/$_VERSION/release | jq .

.job-packer-build: &job-packer-build
  script:
    - *script-bootstrap-python
    - *script-bootstrap-ansible
    - *script-bootstrap-libvirt
    - *script-bootstrap-virtualbox
    - *script-bootstrap-vagrant
    - *script-bootstrap-packer
    - *script-packer-build

.job-molecule-test: &job-molecule-test
  script:
    - *script-bootstrap-python
    - *script-bootstrap-ansible
    - *script-bootstrap-molecule
    - *script-bootstrap-libvirt
    - *script-bootstrap-virtualbox
    - *script-bootstrap-vagrant
    - *script-vagrant-box-add
    - *script-molecule-test

.job-vagrant-cloud-provider-upload: &job-vagrant-cloud-provider-upload
  script:
    - *script-bootstrap-vagrant
    - *script-vagrant-cloud-provider-upload

default:
  before_script:
    - *script-git-submodule
    - *script-linters
  retry: 2

build:kubernetes-1.32-libvirt:
  <<: *job-packer-build
  stage: build
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.32-libvirt
    paths:
      - packer/*/output-vagrant
  variables:
    _BOX: kubernetes-1.32
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64

test:kubernetes-1.32-libvirt:
  <<: *job-molecule-test
  stage: test
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.32-libvirt
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.32
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.32-libvirt

deploy:kubernetes-1.32-libvirt:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.32-libvirt
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.32
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64
  needs:
    - test:kubernetes-1.32-libvirt

build:kubernetes-1.32-virtualbox:
  <<: *job-packer-build
  stage: build
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.32-virtualbox
    paths:
      - packer/*/output-vagrant
  variables:
    _BOX: kubernetes-1.32
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.32-libvirt

test:kubernetes-1.32-virtualbox:
  <<: *job-molecule-test
  stage: test
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.32-virtualbox
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.32
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.32-virtualbox

deploy:kubernetes-1.32-virtualbox:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.32-virtualbox
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.32
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - test:kubernetes-1.32-virtualbox

build:kubernetes-1.31-libvirt:
  <<: *job-packer-build
  stage: build
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.31-libvirt
    paths:
      - packer/*/output-vagrant
  variables:
    _BOX: kubernetes-1.31
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64

test:kubernetes-1.31-libvirt:
  <<: *job-molecule-test
  stage: test
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.31-libvirt
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.31
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.31-libvirt

deploy:kubernetes-1.31-libvirt:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.31-libvirt
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.31
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64
  needs:
    - test:kubernetes-1.31-libvirt

build:kubernetes-1.31-virtualbox:
  <<: *job-packer-build
  stage: build
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.31-virtualbox
    paths:
      - packer/*/output-vagrant
  variables:
    _BOX: kubernetes-1.31
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.31-libvirt

test:kubernetes-1.31-virtualbox:
  <<: *job-molecule-test
  stage: test
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.31-virtualbox
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.31
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.31-virtualbox

deploy:kubernetes-1.31-virtualbox:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.31-virtualbox
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.31
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - test:kubernetes-1.31-virtualbox

build:kubernetes-1.30-libvirt:
  <<: *job-packer-build
  stage: build
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.30-libvirt
    paths:
      - packer/*/output-vagrant
  variables:
    _BOX: kubernetes-1.30
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64

test:kubernetes-1.30-libvirt:
  <<: *job-molecule-test
  stage: test
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.30-libvirt
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.30
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.30-libvirt

deploy:kubernetes-1.30-libvirt:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.30-libvirt
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.30
    _PROVIDER: libvirt
    _ARCHITECTURE: amd64
  needs:
    - test:kubernetes-1.30-libvirt

build:kubernetes-1.30-virtualbox:
  <<: *job-packer-build
  stage: build
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.30-virtualbox
    paths:
      - packer/*/output-vagrant
  variables:
    _BOX: kubernetes-1.30
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.30-libvirt

test:kubernetes-1.30-virtualbox:
  <<: *job-molecule-test
  stage: test
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.30-virtualbox
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.30
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - build:kubernetes-1.30-virtualbox

deploy:kubernetes-1.30-virtualbox:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: $CI_PIPELINE_ID-kubernetes-1.30-virtualbox
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _BOX: kubernetes-1.30
    _PROVIDER: virtualbox
    _ARCHITECTURE: amd64
  needs:
    - test:kubernetes-1.30-virtualbox
