---

.script-git-submodule: &script-git-submodule
  - |
    git submodule sync --recursive
    git submodule update --init --recursive

.script-bootstrap-packer: &script-bootstrap-packer
  - |
    if ! [[ -x "$(command -v packer)" ]]; then
      export DEBIAN_FRONTEND=noninteractive
      curl -skL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      sudo add-apt-repository -y "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      sudo -E apt-get update
      sudo -E apt-get install -y packer
    fi
    sh -x -c "packer --version"

.script-bootstrap-vagrant: &script-bootstrap-vagrant
  - |
    if ! [[ -x "$(command -v vagrant)" ]]; then
      export DEBIAN_FRONTEND=noninteractive
      curl -skL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      sudo add-apt-repository -y "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      sudo -E apt-get update
      sudo -E apt-get install -y vagrant
    fi
    sh -x -c "vagrant --version"

.script-bootstrap-libvirt: &script-bootstrap-libvirt
  - |
    if ! [[ -x "$(command -v qemu-system-x86_64)" ]]; then
      export DEBIAN_FRONTEND=noninteractive
      curl -skL "http://keyserver.ubuntu.com/pks/lookup?op=get&search=0xE996735927E427A733BB653E374C7797FB006459" | sudo apt-key add -
      sudo add-apt-repository -y "deb http://ppa.launchpad.net/savoury1/virtualisation/ubuntu $(lsb_release -cs) main"
      sudo -E apt-get update
      sudo -E apt-get install -y binutils bridge-utils dnsmasq-base ebtables gcc libarchive-tools libguestfs-tools libvirt-clients libvirt-daemon-system libvirt-dev make qemu-system qemu-utils ruby-dev virt-manager
    fi
    sudo systemctl start libvirtd.service
    sh -x -c "qemu-system-x86_64 --version"
    sh -x -c "virsh --version"
    if ! [[ -n "$(vagrant plugin list | grep vagrant-libvirt)" ]]; then
      vagrant plugin install vagrant-libvirt
    fi
    sh -x -c "vagrant plugin list"

.script-bootstrap-virtualbox: &script-bootstrap-virtualbox
  - |
    if ! [[ -x "$(command -v VBoxManage)" ]]; then
      export DEBIAN_FRONTEND=noninteractive
      curl -skL https://www.virtualbox.org/download/oracle_vbox_2016.asc | sudo apt-key add -
      sudo add-apt-repository -y "deb [arch=amd64] https://download.virtualbox.org/virtualbox/debian $(lsb_release -cs) contrib"
      sudo -E apt-get update
      sudo -E apt-get install -y virtualbox-6.1
      export VERSION=$(VBoxManage --version | sed 's/^\([0-9]*\.[0-9]*\.[0-9]*\).*/\1/g')
      curl -skL -O https://download.virtualbox.org/virtualbox/$VERSION/Oracle_VM_VirtualBox_Extension_Pack-$VERSION.vbox-extpack
      echo "y" | sudo VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-$VERSION.vbox-extpack --replace
      rm -rf Oracle_VM_VirtualBox_Extension_Pack-$VERSION.vbox-extpack
    fi
    sudo systemctl start vboxdrv.service
    sh -x -c "VBoxManage --version"

.script-bootstrap-python: &script-bootstrap-python
  - |
    if ! [[ -x "$(command -v pipx)" ]]; then
      export DEBIAN_FRONTEND=noninteractive
      export PIPX_HOME=/usr/local/share/pipx
      export PIPX_BIN_DIR=/usr/local/bin
      sudo -E apt-get update
      sudo -E apt-get install -y bzip2 ca-certificates curl gcc gnupg gzip iproute2 procps python3 python3-apt python3-cryptography python3-dev python3-jmespath python3-lxml python3-netaddr python3-pip python3-setuptools python3-venv python3-virtualenv python3-wheel sudo tar unzip xz-utils zip
      sudo -E pip3 install --prefix=/usr/local --upgrade pipx
      sudo -E pipx install --force --pip-args='--upgrade' flake8
      sudo -E pipx install --force --pip-args='--upgrade' yamllint
    fi
    sh -x -c "python3 --version"
    sh -x -c "pipx --version"
    sh -x -c "flake8 --version"
    sh -x -c "yamllint --version"

.script-bootstrap-ansible: &script-bootstrap-ansible
  - |
    if ! [[ -x "$(command -v ansible)" ]]; then
      sudo -E pipx install --force --pip-args='--upgrade' --include-deps 'ansible>=4.1.0,<5.0.0'
      sudo -E pipx inject --force --pip-args='--upgrade' --include-apps ansible ansible-lint
      sudo -E pipx inject --force --pip-args='--upgrade' ansible docker netaddr python-vagrant
    fi
    sh -x -c "ansible --version"
    sh -x -c "ansible-lint --version"

.script-linters: &script-linters
  - |
    yamllint .
    ansible-lint
    flake8

.script-packer-build: &script-packer-build
  - |
    vagrant cloud auth login --token $VAGRANT_CLOUD_TOKEN
    cd $CI_PROJECT_DIR/packer/$_PACKER_BUILDER_PROVIDER-$_PACKER_BUILDER_VERSION
    packer build packer.json

.script-vagrant-cloud-provider-upload: &script-vagrant-cloud-provider-upload
  - |
    if [[ -n "$CI_COMMIT_TAG" ]] && [[ "$CI_COMMIT_TAG" =~ ^[0-9]+\.[0-9]+\.[0-9]+ ]]; then
      export _VERSION=$CI_COMMIT_TAG
    elif [[ -n "$CI_COMMIT_BRANCH" ]] && [[ "$CI_COMMIT_BRANCH" =~ master ]]; then
      export _VERSION=$(date +%Y%m%d).0.0
    else
      exit 0
    fi
    vagrant cloud auth login --token $VAGRANT_CLOUD_TOKEN
    cd $CI_PROJECT_DIR/packer/$_PACKER_BUILDER_PROVIDER-$_PACKER_BUILDER_VERSION
    export _ORG=$CI_PROJECT_NAMESPACE
    export _BOX=$(echo $CI_PROJECT_NAME | sed "s/^vagrant-//g")-$_PACKER_BUILDER_VERSION
    export _PROVIDER=$_PACKER_BUILDER_PROVIDER
    export _CHECKSUM=$(sha256sum output-vagrant/package.box | awk '{ print $1 }')
    curl -skL \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" \
      --data "{ \"box\": { \"username\": \"$_ORG\", \"name\": \"$_BOX\", \"is_private\": false } }" \
      https://app.vagrantup.com/api/v1/boxes | jq .
    curl -skL \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" \
      --data "{ \"version\": { \"version\": \"$_VERSION\" } }" \
      https://app.vagrantup.com/api/v1/box/$_ORG/$_BOX/versions | jq .
    curl -skL \
      --request DELETE \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" \
      https://app.vagrantup.com/api/v1/box/$_ORG/$_BOX/version/$_VERSION/provider/$_PROVIDER | jq .
    curl -skL \
      --header "Content-Type: application/json" \
      --header "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" \
      --data "{ \"provider\": { \"name\": \"$_PROVIDER\", \"checksum_type\": \"sha256\", \"checksum\": \"$_CHECKSUM\" } }" \
      https://app.vagrantup.com/api/v1/box/$_ORG/$_BOX/version/$_VERSION/providers | jq .
    _UPLOAD_PATH=$(curl -skL \
      --header "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" \
      https://app.vagrantup.com/api/v1/box/$_ORG/$_BOX/version/$_VERSION/provider/$_PROVIDER/upload | jq -r .upload_path)
    curl -skL \
      --request PUT \
      --header "Connection: keep-alive" \
      --upload-file output-vagrant/package.box \
      $_UPLOAD_PATH | jq .
    curl -skL \
      --request PUT \
      --header "Authorization: Bearer $VAGRANT_CLOUD_TOKEN" \
      https://app.vagrantup.com/api/v1/box/$_ORG/$_BOX/version/$_VERSION/release | jq .

.job-packer-build: &job-packer-build
  script:
    - *script-bootstrap-packer
    - *script-bootstrap-vagrant
    - *script-bootstrap-libvirt
    - *script-bootstrap-virtualbox
    - *script-bootstrap-python
    - *script-bootstrap-ansible
    - *script-linters
    - *script-packer-build

.job-vagrant-cloud-provider-upload: &job-vagrant-cloud-provider-upload
  script:
    - *script-bootstrap-vagrant
    - *script-vagrant-cloud-provider-upload

default:
  retry: 2
  before_script:
    - *script-git-submodule

build:libvirt-1.21:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-libvirt-1.21"
    paths:
      - packer/*/output-vagrant
  variables:
    _PACKER_BUILDER_PROVIDER: "libvirt"
    _PACKER_BUILDER_VERSION: "1.21"

deploy:libvirt-1.21:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-libvirt-1.21"
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "libvirt"
    _PACKER_BUILDER_VERSION: "1.21"
  needs:
    - build:libvirt-1.21

build:libvirt-1.20:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-libvirt-1.20"
    paths:
      - packer/*/output-vagrant
  variables:
    _PACKER_BUILDER_PROVIDER: "libvirt"
    _PACKER_BUILDER_VERSION: "1.20"

deploy:libvirt-1.20:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-libvirt-1.20"
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "libvirt"
    _PACKER_BUILDER_VERSION: "1.20"
  needs:
    - build:libvirt-1.20

build:libvirt-1.19:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-libvirt-1.19"
    paths:
      - packer/*/output-vagrant
  variables:
    _PACKER_BUILDER_PROVIDER: "libvirt"
    _PACKER_BUILDER_VERSION: "1.19"

deploy:libvirt-1.19:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-libvirt-1.19"
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "libvirt"
    _PACKER_BUILDER_VERSION: "1.19"
  needs:
    - build:libvirt-1.19

build:virtualbox-1.21:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-virtualbox-1.21"
    paths:
      - packer/*/output-vagrant
  variables:
    _PACKER_BUILDER_PROVIDER: "virtualbox"
    _PACKER_BUILDER_VERSION: "1.21"

deploy:virtualbox-1.21:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-virtualbox-1.21"
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "virtualbox"
    _PACKER_BUILDER_VERSION: "1.21"
  needs:
    - build:virtualbox-1.21

build:virtualbox-1.20:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-virtualbox-1.20"
    paths:
      - packer/*/output-vagrant
  variables:
    _PACKER_BUILDER_PROVIDER: "virtualbox"
    _PACKER_BUILDER_VERSION: "1.20"

deploy:virtualbox-1.20:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-virtualbox-1.20"
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "virtualbox"
    _PACKER_BUILDER_VERSION: "1.20"
  needs:
    - build:virtualbox-1.20

build:virtualbox-1.19:
  <<: *job-packer-build
  stage: build
  cache:
    key: "$CI_PIPELINE_ID-virtualbox-1.19"
    paths:
      - packer/*/output-vagrant
  variables:
    _PACKER_BUILDER_PROVIDER: "virtualbox"
    _PACKER_BUILDER_VERSION: "1.19"

deploy:virtualbox-1.19:
  <<: *job-vagrant-cloud-provider-upload
  stage: deploy
  cache:
    key: "$CI_PIPELINE_ID-virtualbox-1.19"
    paths:
      - packer/*/output-vagrant
    policy: pull
  variables:
    _PACKER_BUILDER_PROVIDER: "virtualbox"
    _PACKER_BUILDER_VERSION: "1.19"
  needs:
    - build:virtualbox-1.19
