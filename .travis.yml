---

os: linux

dist: focal

language: shell

env:
  jobs:
    - MOLECULE_SCENARIO_NAME="1.19"
    - MOLECULE_SCENARIO_NAME="1.18"

before_install:
  - |
    curl -Os https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_x86_64.deb
    curl -Os https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_SHA256SUMS
    curl -Os https://releases.hashicorp.com/vagrant/2.2.10/vagrant_2.2.10_SHA256SUMS.sig
    curl -skL https://keybase.io/hashicorp/pgp_keys.asc | sudo gpg --import
    gpg --verify vagrant_2.2.10_SHA256SUMS.sig vagrant_2.2.10_SHA256SUMS
    sha256sum -c vagrant_2.2.10_SHA256SUMS 2>&1 | grep OK
    sudo apt-get update && sudo apt-get install -y bridge-utils dnsmasq-base ebtables libguestfs-tools libvirt-clients libvirt-daemon-system libvirt-dev qemu-kvm qemu-utils ruby-dev
    sudo dpkg -i vagrant_2.2.10_x86_64.deb
    sudo vagrant plugin install vagrant-libvirt
    rm -rf vagrant_2.2.10_*

  - |
    sudo apt-get -y purge python3-openssl && sudo apt-get -y autoremove
    sudo apt-get update && sudo apt-get install -y ca-certificates curl gcc iproute2 pwgen python3 python3-dev sudo
    curl -skL https://bootstrap.pypa.io/get-pip.py | sudo -H python3 - --prefix=/usr/local
    sudo -H pip3 install --prefix=/usr/local --upgrade --ignore-installed --requirement requirements.txt

install:
  - |
    git submodule init
    git submodule sync
    git submodule update

script:
  - |
    source ./scripts/run-tests.sh \
      && sudo -E molecule dependency -s $MOLECULE_SCENARIO_NAME \
      && sudo -E molecule lint -s $MOLECULE_SCENARIO_NAME \
      && sudo -E molecule syntax -s $MOLECULE_SCENARIO_NAME \
      && sudo -E molecule converge -s $MOLECULE_SCENARIO_NAME \
      && sudo -E molecule side-effect -s $MOLECULE_SCENARIO_NAME \
      && sudo -E molecule verify -s $MOLECULE_SCENARIO_NAME

after_success:
  - |
    sudo vagrant cloud auth login --token "$VAGRANT_TOKEN"
    export REPO=$(echo $TRAVIS_REPO_SLUG | sed 's/\/vagrant-/\//g')
    export BOX="$HOME/.cache/molecule/$TRAVIS_REPO_SLUG/$MOLECULE_SCENARIO_NAME/package.box"
    if [[ -n "$TRAVIS_TAG" ]] && [[ "$TRAVIS_TAG" =~ ^$MOLECULE_SCENARIO_NAME ]]; then
      sudo vagrant cloud publish -rf "$REPO" "$TRAVIS_TAG" libvirt "$BOX"
    elif [[ "$TRAVIS_BRANCH" =~ master ]]; then
      sudo vagrant cloud publish -rf "$REPO" "$MOLECULE_SCENARIO_NAME" libvirt "$BOX"
    fi
